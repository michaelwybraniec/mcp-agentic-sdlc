# MCP Agentic Workflow Example
# Michael Wybraniec, ONE-FRONT 2025
# Contact: michaelwybraniec@me.com
# This file defines the machine- and human-readable workflow for the project.
# It ensures all steps, documentation, and code remain in sync, and enables both agents and humans to track, automate, and maintain project quality.

# Data Science Notebook Project
# MCP for Data Science Notebook

init: |
  - Read mcp-agentic-workflow.yml and README.md to understand the workflow and project goal.
  - Follow the procedures for update, commit, next, and check.
  - Keep mcp-agentic-workflow.yml and README.md in sync with the codebase.
  - Reference the step number in every commit message.
  - If you see blockers or have suggestions, document and address them before moving on.

author: Priya DS

goal: |
  Analyze a dataset and visualize results in a Jupyter notebook.

overview:
  - "1. Data Preparation"
  - "2. Analysis"
  - "3. Visualization"
  - "4. Reporting"

outcome: |
  A Jupyter notebook with data analysis, visualizations, and a summary report.

steps:
  - number: 1
    name: "Data Preparation"
    steps:
      - number: 1.1
        description: "Load and clean dataset"
        done: true
  - number: 2
    name: "Analysis"
    steps:
      - number: 2.1
        description: "Perform statistical analysis"
        done: false
  - number: 3
    name: "Visualization"
    steps:
      - number: 3.1
        description: "Create charts and plots"
        done: false
  - number: 4
    name: "Reporting"
    steps:
      - number: 4.1
        description: "Summarize findings in notebook"
        done: false

procedures:
  - key: update
    number: 1
    name: "update"
    description: |
      Review README.md and mcp-agentic-workflow.yml after each step:
      - Mark the current step as done in mcp-agentic-workflow.yml.
      - Update README.md and mcp-agentic-workflow.yml to reflect the current state and next actions.
      - Keep documentation and workflow tracking always in sync with the codebase.
  - key: commit
    number: 2
    name: "commit"
    description: |
      Commit your changes for each step:
      - Use the commitStandard for your commit message.
      - Reference the relevant step in every commit message.
      - Keep your git history clear and aligned with your project workflow.
      - Commit and push your changes.
  - key: next
    number: 3
    name: "next"
    description: |
      Move to the next step:
      - Identify the next actionable step in mcp-agentic-workflow.yml and begin work on it.
  - key: check
    number: 4
    name: "check"
    description: |
      Review mcp-agentic-workflow.yml to determine the current actionable step:
      - Find the first step (or sub-step) that is not marked as done.
      - If the step is not marked as done, report the step number and description.
      - Use this as your starting point for the next work session or after a break.

notes:
  - "Reference the step in every commit."
  - "Update this file as the project progresses."
  - "Check off each item as you complete it."

commitStandard:
  format: "type(scope step): subject"
  types: [feat, fix, docs, test, chore]
  rules:
    - Reference the step in every commit.
    - Use imperative mood.
    - Keep messages concise and descriptive.
  examples:
    - "feat(data 1.1): load and clean dataset"
    - "docs(report 4.1): summarize findings" 